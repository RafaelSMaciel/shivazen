# Generated by Django 5.2.1 on 2025-10-21 04:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id_cliente', models.AutoField(primary_key=True, serialize=False)),
                ('nome_completo', models.CharField(max_length=150)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('rg', models.CharField(blank=True, max_length=20, null=True)),
                ('profissao', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('cep', models.CharField(blank=True, max_length=10, null=True)),
                ('endereco', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'cliente',
            },
        ),
        migrations.CreateModel(
            name='Funcionalidade',
            fields=[
                ('id_funcionalidade', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'funcionalidade',
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id_perfil', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=50, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'perfil',
            },
        ),
        migrations.CreateModel(
            name='Procedimento',
            fields=[
                ('id_procedimento', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('duracao_minutos', models.IntegerField()),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'procedimento',
            },
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id_profissional', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('especialidade', models.CharField(blank=True, max_length=100, null=True)),
                ('ativo', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'profissional',
            },
        ),
        migrations.CreateModel(
            name='ProntuarioPergunta',
            fields=[
                ('id_pergunta', models.AutoField(primary_key=True, serialize=False)),
                ('texto', models.TextField()),
                ('tipo_resposta', models.CharField(max_length=50)),
                ('ativa', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'prontuario_pergunta',
            },
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id_atendimento', models.AutoField(primary_key=True, serialize=False)),
                ('data_hora_inicio', models.DateTimeField()),
                ('data_hora_fim', models.DateTimeField()),
                ('valor_cobrado', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status_atendimento', models.CharField(default='AGENDADO', max_length=20)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='app_shivazen.cliente')),
                ('procedimento', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='app_shivazen.procedimento')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='app_shivazen.profissional')),
            ],
            options={
                'db_table': 'atendimento',
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id_notificacao', models.AutoField(primary_key=True, serialize=False)),
                ('canal', models.CharField(max_length=20)),
                ('status_envio', models.CharField(max_length=20)),
                ('data_hora_envio', models.DateTimeField(blank=True, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.atendimento')),
            ],
            options={
                'db_table': 'notificacao',
            },
        ),
        migrations.CreateModel(
            name='PerfilFuncionalidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionalidade', models.ForeignKey(db_column='id_funcionalidade', on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.funcionalidade')),
                ('perfil', models.ForeignKey(db_column='id_perfil', on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.perfil')),
            ],
            options={
                'db_table': 'perfil_funcionalidade',
                'unique_together': {('perfil', 'funcionalidade')},
            },
        ),
        migrations.AddField(
            model_name='perfil',
            name='funcionalidades',
            field=models.ManyToManyField(through='app_shivazen.PerfilFuncionalidade', to='app_shivazen.funcionalidade'),
        ),
        migrations.CreateModel(
            name='Preco',
            fields=[
                ('id_preco', models.AutoField(primary_key=True, serialize=False)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('procedimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.procedimento')),
                ('profissional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.profissional')),
            ],
            options={
                'db_table': 'preco',
            },
        ),
        migrations.CreateModel(
            name='DisponibilidadeProfissional',
            fields=[
                ('id_disponibilidade', models.AutoField(primary_key=True, serialize=False)),
                ('dia_semana', models.IntegerField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.profissional')),
            ],
            options={
                'db_table': 'disponibilidade_profissional',
            },
        ),
        migrations.CreateModel(
            name='BloqueioAgenda',
            fields=[
                ('id_bloqueio', models.AutoField(primary_key=True, serialize=False)),
                ('data_hora_inicio', models.DateTimeField()),
                ('data_hora_fim', models.DateTimeField()),
                ('motivo', models.TextField(blank=True, null=True)),
                ('profissional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.profissional')),
            ],
            options={
                'db_table': 'bloqueio_agenda',
            },
        ),
        migrations.CreateModel(
            name='ProfissionalProcedimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedimento', models.ForeignKey(db_column='id_procedimento', on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.procedimento')),
                ('profissional', models.ForeignKey(db_column='id_profissional', on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.profissional')),
            ],
            options={
                'db_table': 'profissional_procedimento',
                'unique_together': {('profissional', 'procedimento')},
            },
        ),
        migrations.AddField(
            model_name='procedimento',
            name='profissionais',
            field=models.ManyToManyField(through='app_shivazen.ProfissionalProcedimento', to='app_shivazen.profissional'),
        ),
        migrations.CreateModel(
            name='Prontuario',
            fields=[
                ('id_prontuario', models.AutoField(primary_key=True, serialize=False)),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.cliente')),
            ],
            options={
                'db_table': 'prontuario',
            },
        ),
        migrations.CreateModel(
            name='ProntuarioResposta',
            fields=[
                ('id_resposta', models.AutoField(primary_key=True, serialize=False)),
                ('resposta_texto', models.TextField(blank=True, null=True)),
                ('resposta_boolean', models.BooleanField(blank=True, null=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.atendimento')),
                ('pergunta', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='app_shivazen.prontuariopergunta')),
            ],
            options={
                'db_table': 'prontuario_resposta',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id_usuario', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('senha_hash', models.CharField(max_length=255)),
                ('ativo', models.BooleanField(default=True)),
                ('chave_secreta_2fa', models.TextField(blank=True, null=True)),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='app_shivazen.perfil')),
                ('profissional', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_shivazen.profissional')),
            ],
            options={
                'db_table': 'usuario',
            },
        ),
        migrations.CreateModel(
            name='TermoConsentimento',
            fields=[
                ('id_termo', models.AutoField(primary_key=True, serialize=False)),
                ('ip_assinatura', models.CharField(blank=True, max_length=45, null=True)),
                ('data_hora_assinatura', models.DateTimeField(auto_now_add=True)),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_shivazen.atendimento')),
                ('usuario_assinatura', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_shivazen.usuario')),
            ],
            options={
                'db_table': 'termo_consentimento',
            },
        ),
        migrations.CreateModel(
            name='LogAuditoria',
            fields=[
                ('id_log', models.AutoField(primary_key=True, serialize=False)),
                ('acao', models.CharField(max_length=255)),
                ('tabela_afetada', models.CharField(blank=True, max_length=100, null=True)),
                ('id_registro_afetado', models.IntegerField(blank=True, null=True)),
                ('detalhes', models.JSONField(blank=True, null=True)),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_shivazen.usuario')),
            ],
            options={
                'db_table': 'log_auditoria',
            },
        ),
    ]
